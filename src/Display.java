
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Ceng443-Hw1
//  @ File Name : Display.java
//  @ Date : 04.04.2015
//  @ Author : 
//
//




public class Display extends JFrame
{
    
    private JLabel labelElMorad;
    private JLabel labelKarus;
    
    private JLabel labelScore;
    private JLabel labelScoreElMorad;
    private JLabel labelScoreKarus;
    
    private JLabel labelKills;
    private JLabel labelKillElMorad;
    private JLabel labelKillKarus;
    
    private JLabel labelTotalDamage;
    private JLabel labelTotalDamageElMorad;
    private JLabel labelTotalDamageKarus;
    
    private JButton buttonPause;
    private JButton buttonContinue;

    private JLabel koIcon;
    
    private int minimumXPanel;
    private int minimumYPanel;

    private int width;
    private int height;
    
    private static Display instance;
    
    public JPanel gameArena;
    public Display(JPanel p) {
        
        gameArena = p;
        initialize();
        
        this.minimumXPanel = 230;
        this.minimumYPanel = 0;
        this.height = 700;
        this.width = 1100;
        
    }
    public static Display getInstance(JPanel p)
    {
        instance = new Display(p);
        instance.run();
        return instance;
    }
            
    public static Display getInstance() {
        
        if(instance == null)
        {
            instance = new Display(null);
            instance.run();
        }
        return instance;
    }
    public JLabel getLabelElMorad() {
        return labelElMorad;
    }

    public void setLabelElMorad(JLabel labelElMorad) {
        this.labelElMorad = labelElMorad;
    }

    public JLabel getLabelKarus() {
        return labelKarus;
    }

    public void setLabelKarus(JLabel labelKarus) {
        this.labelKarus = labelKarus;
    }

    public JLabel getLabelScore() {
        return labelScore;
    }

    public void setLabelScore(JLabel labelScore) {
        this.labelScore = labelScore;
    }

    public JLabel getLabelKills() {
        return labelKills;
    }

    public void setLabelKills(JLabel labelKills) {
        this.labelKills = labelKills;
    }

    public JLabel getLabelTotalDamage() {
        return labelTotalDamage;
    }

    public void setLabelTotalDamage(JLabel labelTotalDamage) {
        this.labelTotalDamage = labelTotalDamage;
    }

    public JLabel getLabelScoreElMorad() {
        return labelScoreElMorad;
    }

    public void setLabelScoreElMorad(JLabel labelScoreElMorad) {
        this.labelScoreElMorad = labelScoreElMorad;
    }

    public JLabel getLabelScoreKarus() {
        return labelScoreKarus;
    }

    public void setLabelScoreKarus(JLabel labelScoreKarus) {
        this.labelScoreKarus = labelScoreKarus;
    }

    public JLabel getLabelKillElMorad() {
        return labelKillElMorad;
    }

    public void setLabelKillElMorad(JLabel labelKillElMorad) {
        this.labelKillElMorad = labelKillElMorad;
    }

    public JLabel getLabelKillKarus() {
        return labelKillKarus;
    }

    public void setLabelKillKarus(JLabel labelKillKarus) {
        this.labelKillKarus = labelKillKarus;
    }

    public JLabel getLabelTotalDamageElMorad() {
        return labelTotalDamageElMorad;
    }

    public void setLabelTotalDamageElMorad(JLabel labelTotalDamageElMorad) {
        this.labelTotalDamageElMorad = labelTotalDamageElMorad;
    }

    public JLabel getLabelTotalDamageKarus() {
        return labelTotalDamageKarus;
    }

    public void setLabelTotalDamageKarus(JLabel labelTotalDamageKarus) {
        this.labelTotalDamageKarus = labelTotalDamageKarus;
    }

    public JButton getButtonPause() {
        return buttonPause;
    }

    public void setButtonPause(JButton buttonPause) {
        this.buttonPause = buttonPause;
    }

    public JButton getButtonContinue() {
        return buttonContinue;
    }

    public void setButtonContinue(JButton buttonContinue) {
        this.buttonContinue = buttonContinue;
    }

    public int getMinimumXPanel() {
        return minimumXPanel;
    }

    public void setMinimumXPanel(int minimumXPanel) {
        this.minimumXPanel = minimumXPanel;
    }

    public int getMinimumYPanel() {
        return minimumYPanel;
    }

    public void setMinimumYPanel(int minimumYPanel) {
        this.minimumYPanel = minimumYPanel;
    }

    public int getWidth() {
        return width;
    }

    public void setWidth(int width) {
        this.width = width;
    }

    public int getHeight() {
        return height;
    }

    public void setHeight(int height) {
        this.height = height;
    }

    private void run() 
    {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() 
            {
                try{
                    setVisible(true);
                } catch(Exception e)
                {
                    e.printStackTrace();
                }
            }
        });
    }

    public void updateInfoPanel()
    {
        
    }
    
    private void initialize()
    {
        /*Creating Frame*/
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        setFont(new Font("System", Font.PLAIN, 14));
        
        /*Set Title*/
        setTitle("KO");
        
        Container cp = getContentPane();
        cp.setLayout(new FlowLayout());
        /*Create Panel*/
        JPanel infoPanel = new JPanel(){
            @Override
            public void paintComponent(Graphics g)
            {
                this.removeAll();
                /*Create ElMorad and Karus Label*/
                labelElMorad = new JLabel("El Morad");
                labelKarus = new JLabel("Karus");

                labelElMorad.setBounds(45, 5, 150, 15);
                labelElMorad.setHorizontalAlignment(SwingConstants.CENTER);
                add(labelElMorad);

                labelKarus.setBounds(55, 5, 150, 15);
                labelKarus.setHorizontalAlignment(SwingConstants.RIGHT);
                add(labelKarus);

                /*Create Score Label*/
                labelScore = new JLabel("Score:");
                labelScore.setBounds(10, 45, 150, 15);
                labelScore.setHorizontalAlignment(SwingConstants.LEFT);
                add(labelScore);

                labelScoreElMorad = new JLabel(Simulation.getTeamOfElMorad().getScore() + "");
                labelScoreElMorad.setBounds(45, 45, 150, 15);
                labelScoreElMorad.setHorizontalAlignment(SwingConstants.CENTER);
                add(labelScoreElMorad);

                labelScoreKarus = new JLabel(Simulation.getTeamOfKarus().getScore() + "");
                labelScoreKarus.setBounds(55, 45, 150, 15);
                labelScoreKarus.setHorizontalAlignment(SwingConstants.RIGHT);
                add(labelScoreKarus);

                /*Create Kills Label*/
                labelKills = new JLabel("Kills:");
                labelKills.setBounds(10, 65, 150, 15);
                labelKills.setHorizontalAlignment(SwingConstants.LEFT);
                add(labelKills);

                labelKillElMorad = new JLabel(Simulation.getTeamOfElMorad().getTotalKills() + "");
                labelKillElMorad.setBounds(45, 65, 150, 15);
                labelKillElMorad.setHorizontalAlignment(SwingConstants.CENTER);
                add(labelKillElMorad);

                labelKillKarus = new JLabel(Simulation.getTeamOfKarus().getTotalKills() + "");
                labelKillKarus.setBounds(55, 65, 150, 15);
                labelKillKarus.setHorizontalAlignment(SwingConstants.RIGHT);
                add(labelKillKarus);

                /*Create Total Damage Label*/
                labelTotalDamage = new JLabel("T. Damage:");
                labelTotalDamage.setBounds(10, 85, 150, 15);
                labelTotalDamage.setHorizontalAlignment(SwingConstants.LEFT);
                add(labelTotalDamage);

                labelTotalDamageElMorad = new JLabel(Simulation.getTeamOfElMorad().getTotalDamage() + "");
                labelTotalDamageElMorad.setBounds(45, 85, 150, 15);
                labelTotalDamageElMorad.setHorizontalAlignment(SwingConstants.CENTER);
                add(labelTotalDamageElMorad);

                labelTotalDamageKarus = new JLabel(Simulation.getTeamOfKarus().getTotalDamage() + "");
                labelTotalDamageKarus.setBounds(55, 85, 150, 15);
                labelTotalDamageKarus.setHorizontalAlignment(SwingConstants.RIGHT);
                add(labelTotalDamageKarus);
               
                
                
                
                /*Create KO Icon*/
                ImageIcon icon = new ImageIcon("src/koicon.jpg");
                koIcon = new JLabel(icon);
                koIcon.setBounds(0, 230, 250, 350);
                koIcon.setHorizontalAlignment(SwingConstants.CENTER);
                add(koIcon);
            }
        };
        
//        buttonPause = new JButton("Pause");
//        buttonPause.setBounds(10, 105, 100, 50);
//        buttonPause.setHorizontalAlignment(SwingConstants.CENTER);
//        cp.add(buttonPause);
//        
//        buttonPause.addMouseListener(new MouseAdapter() {
//            @Override
//            public void mouseClicked(MouseEvent arg0)
//            {
//                buttonPause.setText("Continue");
//            }
//        });
        
        infoPanel.setBackground(Color.WHITE);
        infoPanel.setPreferredSize(new Dimension(300,600));
        infoPanel.setMinimumSize(new Dimension(300,600));
        infoPanel.setSize(300,600);
        infoPanel.setLayout(null);
        
        cp.add(infoPanel);        
        

        
        cp.add(gameArena);
        
        
        
        
        
        pack();
    }
    
}
